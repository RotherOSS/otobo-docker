# Run the OTOBO web app via HTTPS on the port $OTOBO_WEB_HTTPS_PORT or port 443 per default.
# HTTP on port 80 redirects to HTTPS on port 443.
# This is implemented by running nginx as a reverse proxy for a webserver running otobo.psgi.

# See also README.md.

# most current docker-compose file version, as of 2020-05-21
version: '3.3'

services:

  # There is no HTTP port is specified, as the otobo webserver should only be reachable via HTTPS.
  # Note that the nginx service does provide service to port 80, but only to redirect to HTTPS.
  #web:
  #  ports:
  #    - "${OTOBO_WEB_HTTP_PORT:-80}:5000"

  nginx:
    image: ${OTOBO_IMAGE_OTOBO_NGINX:-rotheross/otobo-nginx-webproxy:rel-10_1_beta1}
    # according to https://stackoverflow.com/questions/43467670/which-capabilities-can-i-drop-in-a-docker-nginx-container
    cap_drop:
        - ALL
    cap_add:
        - CAP_SYS_CHROOT
        - CAP_CHOWN
        - CAP_DAC_OVERRIDE
        - CAP_SETGID
        - CAP_SETUID
    depends_on:
      - web
    restart: always
    volumes:
      - otobo_nginx_ssl:/etc/nginx/ssl
    # The HTTP port is exposed, but only redirects to HTTPS
    ports:
      - "${OTOBO_WEB_HTTPS_PORT:-443}:8443"
      - "${OTOBO_WEB_HTTP_PORT:-80}:8080"
    # inside the docker network the host and the port is fixed
    environment:
      OTOBO_NGINX_WEB_HOST: web
      OTOBO_NGINX_WEB_PORT: 5000
      OTOBO_NGINX_SSL_CERTIFICATE: ${OTOBO_NGINX_SSL_CERTIFICATE:?err}
      OTOBO_NGINX_SSL_CERTIFICATE_KEY: ${OTOBO_NGINX_SSL_CERTIFICATE_KEY:?err}
      NGINX_ENVSUBST_TEMPLATE_DIR: ${NGINX_ENVSUBST_TEMPLATE_DIR}
    healthcheck:
      test: service nginx status || exit 1

volumes:
  otobo_nginx_ssl:
    external: true
