# Settings that are needed by Docker Compose itself.

# This determines the name of the Docker containers, e.g. 'otobo_web_1'.
COMPOSE_PROJECT_NAME=otobo

# COMPOSE_FILE is a collection of files, separated by COMPOSE_PATH_SEPARATOR, that make up the final config.
# The files usually reside in the subdirectory docker-compose.
# Additional services can be added by concatenating more files to COMPOSE_FILE. An example would services
# for S3 compatible storage. That is: :docker-compose/otobo-localstack.yml or :docker-compose/otobo-minio.yml
COMPOSE_PATH_SEPARATOR=:
COMPOSE_FILE=docker-compose/otobo-base.yml:docker-compose/otobo-override-https.yml

# Database configuration
# OTOBO_DB_ROOT_PASSWORD must be set
OTOBO_DB_ROOT_PASSWORD=

# Set this to a value in bytes to overwrite the default query size set for OTOBO
#OTOBO_DB_QUERY_CACHE_SIZE=

# HTTP options
# In the HTTPS case http:// redirects to https://
# Set OTOBO_WEB_HTTP_PORT when the HTTP port is not 80
#OTOBO_WEB_HTTP_PORT=<your special port>

# Set OTOBO_WEB_HTTP_IPADDR when only requests addressed to a specific IP should be served.
# See https://docs.docker.com/compose/compose-file/compose-file-v3/#ports
#OTOBO_WEB_HTTP_IPADDR=<your special ip address>

# HTTPS options

# set OTOBO_WEB_HTTPS_PORT when the HTTPS port is not 443
#OTOBO_WEB_HTTPS_PORT=<your special port>

# Set OTOBO_WEB_HTTPS_IPADDR when only requests addressed to a specific IP should be served.
# See https://docs.docker.com/compose/compose-file/compose-file-v3/#ports
#OTOBO_WEB_HTTPS_IPADDR=<your special ip address>

# The settings OTOBO_NGINX_SSL_CERTIFICATE and OTOBO_NGINX_SSL_CERTIFICATE_KEY
# are mandatory when HTTPS is used.
# The configured pathes must be absolute pathes that are available in the container.
#OTOBO_NGINX_SSL_CERTIFICATE=/etc/nginx/ssl/ssl-cert.crt
#OTOBO_NGINX_SSL_CERTIFICATE_KEY=/etc/nginx/ssl/ssl-key.key
OTOBO_NGINX_SSL_CERTIFICATE=
OTOBO_NGINX_SSL_CERTIFICATE_KEY=

# Elasticsearch options
OTOBO_ELASTICSEARCH_ES_JAVA_OPTS=-Xms512m -Xmx512m

# Special configuration when running OTOBO in a cluster
OTOBO_SYNC_WITH_S3=0
#OTOBO_SYNC_WITH_S3=1

################################################################################
# The Docker image for the service 'db' can be specified explicitly.
# The default is mariadb:10.5
################################################################################
#OTOBO_IMAGE_DB=

################################################################################
# The Docker image for the services 'web' and 'daemon' can be specified explicitly.
# The default is rotheross/otobo:latest-10_1
################################################################################

# During development it is convenient to be able to switch between different Docker repositories and Docker image versions.
# The switching can be done with scripts/devel/generate_dot_env.sh. In order to activate this feature,
# create the file dot_env.m4 in your Docker Compose working dir, e.g. /opt/otobo-docker, and uncomment the line below.
#OTOBO_IMAGE_OTOBO=otovar_REPOSITORY()otobo:otovar_TAG()

# More examples
#OTOBO_IMAGE_OTOBO=rotheross/otobo:latest-10_1
#OTOBO_IMAGE_OTOBO=rotheross/otobo:rel-10_1_5
#OTOBO_IMAGE_OTOBO=rotheross/otobo:devel-rel-10_1
#OTOBO_IMAGE_OTOBO=otobo:local-10.1.x

################################################################################
# The Docker image for the service 'eleastic' can be specified explicitly.
# The default is rotheross/otobo-elasticsearch:latest-10_1
################################################################################

# During development it is convenient to be able to switch between different Docker repositories and Docker image versions.
# The switching can be done with scripts/devel/generate_dot_env.sh. In order to activate this feature,
# create the file dot_env.m4 in your Docker Compose working dir, e.g. /opt/otobo-docker, and uncomment the line below.
#OTOBO_IMAGE_OTOBO_ELASTICSEARCH=otovar_REPOSITORY()otobo-elasticsearch:otovar_TAG()

# More examples
#OTOBO_IMAGE_OTOBO_ELASTICSEARCH=rotheross/otobo-elasticsearch:latest-10_1
#OTOBO_IMAGE_OTOBO_ELASTICSEARCH=rotheross/otobo-elasticsearch:rel-10_1_5
#OTOBO_IMAGE_OTOBO_ELASTICSEARCH=rotheross/otobo-elasticsearch:devel-rel-10_1
#OTOBO_IMAGE_OTOBO_ELASTICSEARCH=otobo-elasticsearch:local-10.1.x

################################################################################
# The Docker image for the service 'redis' can be specified explicitly.
# The default is redis:6.0-alpine
################################################################################
#OTOBO_IMAGE_REDIS=

################################################################################
# The Docker image for the service 'nginx' can be specified explicitly.
# The default image is rotheross/otobo-nginx-webproxy:latest-10_1
################################################################################

# During development it is convenient to be able to switch between different Docker repositories and Docker image versions.
# The switching can be done with scripts/devel/generate_dot_env.sh. In order to activate this feature,
# create the file dot_env.m4 in your Docker Compose working dir, e.g. /opt/otobo-docker, and uncomment the line below.
#OTOBO_IMAGE_OTOBO_NGINX=otovar_REPOSITORY()otobo-nginx-webproxy:otovar_TAG()

# More examples
#OTOBO_IMAGE_OTOBO_NGINX=rotheross/otobo-nginx-webproxy:latest-10_1
#OTOBO_IMAGE_OTOBO_NGINX=rotheross/otobo-nginx-webproxy:rel-10_1_5
#OTOBO_IMAGE_OTOBO_NGINX=rotheross/otobo-nginx-webproxy:devel-rel-10_1
#OTOBO_IMAGE_OTOBO_NGINX=otobo-nginx-webproxy:local-10.1.x

